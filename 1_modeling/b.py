# Просте  симетричне випадкове блукання стартує  з 0. 

# Зроблено 100 кроків. 
# b) Порахувати кількість змін знаків напротязі блукання та ймовірність (теоретичну та емпіричну), з якою така кількість могла відбутися. 

# вам потрібно визначити, коли знаки змінюються під час кожного кроку блукання і підрахувати їх кількість.

# Теоретична ймовірність зміни знака при кожному кроці блукання дорівнює 0.5, оскільки це ймовірність того, що наступний крок може бути вверх або вниз, і обидва випадки мають однакову ймовірність.

import random

# Кількість кроків
n = 100
# Лічильник для кількості змін знака
sign_changes = 0

# Моделюємо просте симетричне випадкове блукання
current_position = 0
for _ in range(n):
    # Запам'ятовуємо поточе положення
    prev_position = current_position
    # Генеруємо випадковий крок (вверх або вниз)
    step = random.choice([-1, 1])
    current_position += step
    # Перевіряємо, чи змінився знак
    if prev_position * current_position < 0:
        sign_changes += 1

# Емпірична ймовірність
empirical_probability = sign_changes / (n - 1)  # (n-1) - тут, оскільки зміни знака не можуть відбуватися на першому кроці

print(f"Кількість змін знака: {sign_changes}")
print(f"Емпірична ймовірність: {empirical_probability}")
print(f"Теоретична ймовірність: 0.5")


# Кількість змін знака: 0 Емпірична ймовірність: 0.0 Теоретична ймовірність: 0.5
